{"version":3,"sources":["components/Person.js","components/Persons.js","components/Filter.js","components/PersonForm.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Person","person","handleDelete","name","number","onClick","id","Persons","persons","map","Filter","newSearch","handleChangeSearch","placeholder","value","onChange","PersonForm","addContact","newName","newPhone","handleNameChange","handlePhoneChange","onSubmit","baseURL","axios","get","then","response","data","newPerson","post","url","delete","put","Notification","message","success","className","App","useState","setPersons","setNewName","setNewPhone","setNewSearch","successMessage","setSuccessMessage","errorMessage","setErrorMessage","useEffect","personService","returnedPersons","personsToShow","filter","toLowerCase","includes","event","target","preventDefault","find","window","confirm","n","returnedPerson","p","setTimeout","catch","error","length","alert","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5e6013c3.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Person = ({person, handleDelete}) => {\r\n    return (\r\n        <li>{person.name} - {person.number}  <button onClick={() => handleDelete(person.id)}>Delete</button></li>\r\n    )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst Persons = ({persons, handleDelete}) => {\r\n\r\n    return (\r\n        <ul>\r\n            {persons.map(person => <Person key={person.name} person={person} handleDelete={handleDelete}/>)}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Filter = ({newSearch, handleChangeSearch}) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <input placeholder='Search contact' value={newSearch} onChange={handleChangeSearch}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = ({addContact, newName, newPhone, handleNameChange, handlePhoneChange}) => {\r\n    return (\r\n            <form onSubmit={addContact}>\r\n                <div>\r\n                    <div>\r\n                        <input placeholder='Name' value={newName} onChange={handleNameChange} />\r\n                    </div>\r\n                    <div>\r\n                        <input placeholder='Phone' value={newPhone} onChange={handlePhoneChange} />\r\n                    </div>\r\n                    <button>add</button>\r\n                </div>\r\n            </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import axios from 'axios'\r\nconst baseURL = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseURL)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newPerson) => {\r\n    const request = axios.post(baseURL, newPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = id => {\r\n    const url = `${baseURL}/${id}`\r\n    const request = axios.delete(url)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst updateNumber = (id, newPerson) => {\r\n    const request = axios.put(`${baseURL}/${id}`, newPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, deletePerson, updateNumber }","import React from 'react'\r\n\r\n            \r\nconst Notification = ({ message, success }) => {\r\n    if (!message) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className={success ? 'green-notification' : 'red-notification'}>\r\n            <h4>\r\n            { message }\r\n            </h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification ","import React, { useEffect, useState } from 'react'\r\nimport Persons from './components/Persons'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport personService from './services/persons'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {\r\n\r\n    const [persons, setPersons] = useState([])\r\n    const [newName, setNewName] = useState('')\r\n    const [newPhone, setNewPhone] = useState('')\r\n    const [newSearch, setNewSearch] = useState('')\r\n    const [successMessage, setSuccessMessage] = useState('')\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n\r\n    useEffect(() => {\r\n        personService\r\n            .getAll()\r\n            .then(returnedPersons => {\r\n            setPersons(returnedPersons)\r\n        })\r\n    }, [])\r\n\r\n    const handleNameChange = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const handlePhoneChange = (event) => {\r\n        setNewPhone(event.target.value)\r\n    }\r\n\r\n    const addContact = (event) => {\r\n        event.preventDefault()\r\n\r\n        const isInPhonebook = persons.find(person => person.name.toLowerCase() === newName.toLowerCase())\r\n\r\n        if (!(isInPhonebook)) {\r\n            if (!(newName === '')) {\r\n\r\n                if (!(newPhone === '')) {\r\n                    const newPerson = {\r\n                        id: persons.length + 1,\r\n                        name: newName,\r\n                        number: newPhone\r\n                    }\r\n                    personService\r\n                        .create(newPerson)\r\n                        .then(returnedPerson => {\r\n                            setPersons([...persons, returnedPerson])\r\n                            setSuccessMessage(`Added ${newPerson.name}`)\r\n                            setTimeout(() => {\r\n                                setSuccessMessage('')\r\n                            }, 3000)\r\n                        })\r\n                        .catch(error => {\r\n                            setErrorMessage('Name must be larger than 3 and number must be larger than 8')\r\n                            setTimeout(() => {\r\n                                setErrorMessage('')\r\n                            }, 3000)\r\n                        })\r\n                    setNewName('')\r\n                    setNewPhone('')\r\n                } else {\r\n                    alert('Please add the phone')\r\n                }\r\n            } else {\r\n                alert('Please select a contact name')\r\n            }\r\n        } else {\r\n            const replaceNum = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\r\n\r\n            if (replaceNum) {\r\n                const person = persons.find(n => n.name.toLowerCase() === newName.toLowerCase())\r\n                const newPerson = {...person, number: newPhone}\r\n                personService\r\n                    .updateNumber(person.id, newPerson)\r\n                    .then(returnedPerson => {\r\n                        setPersons(persons.map(p => (p.id !== person.id) ? p : returnedPerson))\r\n                        setSuccessMessage(`Updated ${newPerson.name} new number`)\r\n                        setTimeout(() => {\r\n                            setSuccessMessage('')\r\n                        }, 3000)\r\n                    })\r\n                    .catch(error => {\r\n                        setErrorMessage(`Information of ${newPerson.name} has already been removed from server`)\r\n                        setTimeout(() => {\r\n                            setErrorMessage('')\r\n                        }, 3000)\r\n                    })\r\n                    setNewName('')\r\n                    setNewPhone('')\r\n            } \r\n        }\r\n    }\r\n\r\n    const handleChangeSearch = (event) => {\r\n        setNewSearch(event.target.value)\r\n    }\r\n\r\n    const handleDelete = (id) => {\r\n\r\n        const name = persons.filter(n => n.id === id)[0].name\r\n        const sure = window.confirm(`Are you sure you want to delete ${name}`)\r\n\r\n        if (sure) {\r\n            personService\r\n            .deletePerson(id)\r\n            .then(response => {\r\n                setPersons(persons.filter(n => n.id !== id))\r\n            })\r\n        }        \r\n    }\r\n\r\n    const personsToShow = (persons.filter(person => person.name.toLowerCase().includes(newSearch.toLowerCase()))) \r\n\r\n    return (\r\n        <div>\r\n            <h1>Phonebook</h1>\r\n            <br />\r\n            {\r\n                successMessage\r\n                    ? <Notification message={successMessage} success={true} />\r\n                    : <Notification message={errorMessage} success={false} />\r\n            }\r\n            <h4>Search contact</h4>\r\n            <Filter\r\n                newSearch={newSearch}\r\n                handleChangeSearch={handleChangeSearch} />\r\n\r\n            <br />\r\n\r\n            <h4>Add contact</h4>\r\n            <PersonForm\r\n                addContact={addContact}\r\n                newName={newName}\r\n                newPhone={newPhone}\r\n                handleNameChange={handleNameChange}\r\n                handlePhoneChange={handlePhoneChange} />\r\n            \r\n            <h2>Numbers</h2>\r\n            <Persons persons={personsToShow} handleDelete={handleDelete}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}